<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>